---
title: "Exploring Data"
author: "Matt Maslow"
format: html
---

# Reading and Tidying the data

```{r}
library(tidyverse)
library(rvest)
```

## Playing with March Madness data from 2024 tournament

### Webscraping the data & Cleaning

```{r}
url <- "https://www.barttorvik.com/#"
```

```{r}
marchMadness <- 
  url %>%
  read_html() %>%
  html_nodes("table") %>%
  html_table(trim = TRUE, header = FALSE) %>%
  .[[1]] %>%
  .[-1,] %>%
  .[-27,] %>%
  .[-52,] %>%
  .[-77,] %>%
  .[-102,] %>%
  .[-127,] %>%
  .[-152,]

marchMadness
```
```{r}
#write_csv(marchMadness, file = "MarchMadness24.csv")
```

```{r}
mm24 <- read_csv("MarchMadness24.csv")

mm24
```


# Filtering For the tournament teams only

```{r}
mm24Qualified <- mm24[str_detect(mm24$Team, pattern = "❌|✅"), ]
```

```{r}
# write_csv(mm24Qualified, file = "mm24_TournamentTeams.csv")

mm24Qualified <- read_csv("mm24_TournamentTeams.csv")
```

## cleaning data 

```{r}
mm24Qualified <- 
  mm24Qualified %>%
  select(-Rec) %>%
  rename(Games_Played = G) %>%
  mutate(Team = as.character(Team)) %>%
  separate(Team, sep = ",", into = c("Team", "Tournament_Status")) %>%
  separate(Team, sep = "(?<=\\D)(?=\\d)",
           into = c("Team", "PlayOff_Seed")) %>%
  separate(PlayOff_Seed, sep = "\\D", into = c("PlayOff_Seed", "rand")) %>%
  select(-rand, -Tournament_Status) %>%
  mutate(Conf = as.factor(Conf))
mm24Qualified
```

"(?<=\\D)(?=\\d)", this means that there's a non digit that is followed by a digit, in this case space before the digit (utilized stringR cheatsheet)


```{r}
library(plotly)
library(shiny)
```

```{r}
unique_team_vec <- unique(mm24Qualified$Team)
unique_var_vec <- mm24Qualified %>% select(-Team, -Conf) %>% colnames()


ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(selectInput("Team_choice",
                             label = "Choose a Team:",
                 choices = unique_team_vec),
                 selectInput("var_choice",
                             label = "Choose a Variable to plot:",
                             choices = unique_var_vec),
                 ),
    mainPanel(
      plotOutput("major_plot"),
      tableOutput("sex_table")
    
  )
  )
  )


server <- function(input, output, session) {
  
  mm24_react <- reactive({
    
    mm24Filtered <- mm24Qualified %>% filtered(Team == input$Team_choice) %>% select(Team, input$var_choice)
    
  })
  
  output$Team_Plot <- renderPlot({
    ggplot(data = mm24_react(), aes( x = input$var_choice)) +
      geom_histogram()
  })
  
  output$Team_Table <- renderTable({})
 
}

shinyApp(ui, server)
```




















